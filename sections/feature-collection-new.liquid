
{{ 'product-card-new.css' | asset_url | stylesheet_tag }}

{% comment %} 
{{ 'swiper.min.js' | asset_url | script_tag }} {% endcomment %}


<div class="container__feature-collection page-width">
  <div class="btn-group">
      <div class="swiper-btn swiper-button-prev"></div>
      <div class="swiper-btn swiper-button-next"></div>
    </div>
  <div class="container__feature-collection--title-wrapper">
    <h2 class="container__feature-collection--title">{{ section.settings.heading }}</h2>
  </div>
  <div class="feature-collection swiper mySwiper mySwiper-{{ section.id }}">
    <div class="container__product-list swiper-wrapper">
      {% for product in section.settings.collection.products %}
        {%  assign index8 = forloop.index0 |  modulo: 8 %}
        {%  assign noOfProducts =  section.settings.collection.products | size %}
        
        {% if index8 == 0 %}
          <div class="swiper-slide">
            <div class="product-grid {% if index8 < 6 and index8 > 4 %} product-grid-6 {% elsif index8 < 4 and index8 > 2 %} product-grid-4 {% elsif index8 > 0 and index8 < 3 %} product-grid-2 {% endif %}"> 
        {% endif %}

        
        
        {% render 'product-card-new' product: product
        %}
        

        

        {% if index8 == 7 or forloop.last %}
            </div>
          </div>
        {% endif %}

      {% endfor %}
    </div>
    <div class="swiper-pagination"></div>
  </div>
</div>


<style>

.container__feature-collection {
  position: relative
}

.btn-group {
    display: flex;
    position: absolute;
    gap: 20px;
    right: 20px;
    top: 20px;
    
  }

  .swiper-btn {
    display: flex !important;
    width: 60px;
    height: 60px;
    border-radius: 50%;
    background-color: #008780;
    color: white;
    justify-content: center;
    align-items: center;
    position: initial;
  }

  .swiper-button-next:after, .swiper-button-prev:after {
    font-size: 24px;
    font-weight: 900;
  }

  .swiper-wrapper {
    padding-bottom: 50px;

  }
  .swiper-container-horizontal>.swiper-pagination-bullets, .swiper-pagination-custom, .swiper-pagination-fraction{
    bottom: 0px !important;
}
  
  /* .swiper-pagination {
    top: 45px;
  } */

  /* .swiper-button-prev {
    left: 0;
  }

  .swiper-button-next {
    right: 0;
  } */

  .swiper-pagination-bullet-active {
    background-color: #008780;
  }

  .swiper-button-disabled {
    background-color: transparent;
    border: 2px solid #008780;
    color: black;
  }

  @media screen and (max-width: 769px) {
    .btn-group {
      bottom: 2rem;
      top: auto;
    }
      
    .swiper-btn {
      width: 35px;
      height: 35px;
      
    }

    .swiper-button-next:after, .swiper-button-prev:after {
    font-size: 14px;
    font-weight: 900;
  }

  .swiper-pagination {
    text-align: start;
  }
  }

</style>


{% javascript %}

  // let swiper = new Swiper(".mySwiper", {
  //   slidesPerView: 4,
  //   pagination: {
  //     el: ".swiper-pagination",
  //     clickable: true
  //   },
  //   navigation: {
  //     nextEl: '.swiper-button-next',
  //     prevEl: '.swiper-button-prev',
  //   },

// pagination: {
// el: ".swiper-pagination",
// clickable: true;
// },
//  });

// document.addEventListener('DOMContentLoaded', function() {
//   var swiper = new Swiper('.mySwiper', {
//     slidesPerView: 4,
//     spaceBetween: 30,
//     pagination: {
//       el: '.swiper-pagination',
//       clickable: true,
//     },
//     navigation: {
//       nextEl: '.swiper-button-next',
//       prevEl: '.swiper-button-prev',
//     },
//   });
// });

document.addEventListener('DOMContentLoaded', function() {
  //    document.addEventListener('shopify:section:load', () => {
    const id = "{{ section.id }}"
    

    let swiper = new Swiper(`#shopify-section-${id} .mySwiper`, {
    slidesPerView: 1,
    spaceBetween: 10,
    // grid: {
    //       rows: 2,
    // },
    pagination: {
      el: `.swiper-pagination`,
      clickable: true,
    },
    navigation: {
      prevEl: `.swiper-button-prev`,
      nextEl: `.swiper-button-next`,
    },
    breakpoints: {
      786: {
        slidesPerView: 1,
        spaceBetween: 10,
        
      }
    },
    observer: true, 
    observeParents: true,
  })
  setTimeout(() => {
    console.log(`swiper.init()`);
  swiper.init();

  console.log(`swiper.update()`);
  swiper.update();
  }, 5000);
   
    });

{% endjavascript %}


{% schema %}
  {
    "name": "New Featured Collection",
    "tag": "section",
    "class": "section",
    "settings": [
      {
        "type": "richtext",
        "id": "heading",
        "label": "Heading",
        "default": "<p>Collection</p>"
      }, {
        "type": "collection",
        "id": "collection",
        "label": "Collection"
      }
    ],
    "presets": [
      {
        "name": "New Featured Collection",
        "category": "Section"
      }
    ]
  }
{% endschema %}